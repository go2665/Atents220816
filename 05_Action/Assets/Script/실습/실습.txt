10/13
1. 입력 처리
  1.1. InputSystem으로 입력을 처리한다.  
  1.2. PlayerController에서 입력에 따라 앞뒤좌우로 움직인다.
    1.2.1. W를 누르면 카메라의 앞쪽 방향으로 이동
    1.2.2. S를 누르면 카메라의 뒤쪽 방향으로 이동
    1.2.3. A를 누르면 카메라의 왼쪽 방향으로 이동
    1.2.4. D를 누르면 카메라의 오른쪽 방향으로 이동
  1.3. 캐릭터의 transform을 이용해서 이동
  1.4. 캐릭터는 이동하는 방향을 바라봐야 한다.
  1.5. PlayerInputActions 1.2. 조건에 맞게 완성하기 
  시간 : 10시 50분까지

2. 캐릭터가 회전을 할 때 즉시 회전하지 않고 천천히 회전이 일어난다.
3. 키보드 입력을 중지했을 때 원래 정면을 바라보는 현상 제거하기
   시간 : 12시 20분까지

10/14
1. 이동 애니메이션 처리
    1.1. 캐릭터가 이동을 하면 MoveFWD_Battle_InPlace_SwordAndShield 애니메이션 재생
    1.2. 캐릭터가 이동을 하지 않으면 Idle_Battle_SwordAndShiled 애니메이션 재생
    1.3. 쉬프트를 누를 때마다 플레이어의 이동 모드를 변경한다.
        1.3.1. MoveMode enum만들기
        1.3.2. MoveMode.Walk와 MoveMode.Run 
        1.3.3. MoveMode.Walk일 때는 MoveFWD_Battle_InPlace_SwordAndShield 재생
        1.3.4. MoveMode.Run일 때는 SprintFWD_Battle_InPlace_SwordAndShield 재생
    (힌트 : 블랜드 트리)
    시간 : 9시 50분까지 -> 10시 15분까지


2. 랜덤으로 idle 애니메이션이 선택 될 때 다른 확률로 선택되게 만들기
   2.1. RandomSelect의 결과가 다른 확률로 결정
    2.1.1. 0은 70% 확률
    2.1.2. 1은 20% 확률
    2.1.3. 2는 4% 확률
    2.1.4. 3은 3% 확률
    2.1.5. 4는 3% 확률
    시간 : 1시 5분까지


주말과제
몬스터가 몇개의 웨이포인트를 계속 왕복하기
 1. 몬스터는 현재 지정된 웨이포인트로 이동한다.
 2. 몬스터가 이동할 때는 이동 애니메이션이 나온다.
 3. 몬스터가 지정된 웨이포인트에 도착하면 몇초간 대기한다.
 4. 몬스터는 대기할 때 Idle 애니메이션이 나온다.
 5. 몬스터는 대기시간이 끝나면 다음 웨이포인트로 움직인다.


10/17
1. 코드 확인
   시간 : 1시까지

2. 길찾기용 테스트 씬 만들기
  2.1. 새 씬을 만들기
  2.2. 장애물을 배치해서 미로처럼 만들기
  2.3. Enemy 3~4마리 배치
  2.4. 각 Enemy별로 순찰 코스 만들기
  시간 : 2시 20분까지


10/18
1. 기즈모를 통해 플레이어가 적의 시야범위 안에 들어왔는지 표현하기
  1.1. 적의 시야범위에 플레이어가 들어가면 기즈모 색깔이 빨간색으로 변경된다.

  시간 : 12시까지

2. 기즈모를 이용해서 시야각 경계지점을 표현하기
   2.1. 중심점에서 p1과 p2로 가는 선 두개를 그린다.
   시간 : 1시까지



10/19
1. 코드 확인
   시간 : 9시 50분까지

2. Sword02 칼 이팩트 만들어보기
   시간 : 2시 20분까지


10/20
1. Enemy에게 IHealth랑 IBattle 상속 시키기
   시간 : 12시 20분까지

2. 코드확인
   시간 : 1시까지

3. 코드 확인 + 빌보드 만드는 방법 생각하기
   시간 : 2시 10분까지


10/21
1. Enemy가 공격을 받았을 때 GetHit 애니메이션 재생하기
2. Enemy가 죽으면 사망 애니메이션이 재생된다.
   시간 : 10시 35분까지

3. 플레이어가 EllenRandomIdle1 ~ EllenRandomIdle3 애니메이션이 재생되는 동안 무기와 방패가 보이지 않게 만든다.
   3.1. StateMachineBehaviour를 이용해서 처리하기
   3.2. Player 클래스에 무기와 방패를 on/off하는 함수 만들어서 사용하기
   시간 : 12시 20분까지 -> 12시 50분까지

4. 플레이어 HP바에서 HP_Text가 현재 HP 수치에 맞게 변경되게 만들기
   시간 : 2시 5분까지


10/24
1. 플레이어를 따라다니는 카메라 만들기
2. 플레이어 사망 연출 만들기
   2.1. 플레이어가 죽으면 카메라가 플레이어를 위에서 아래로 바라보는 방향으로 천천히 이동하고 회전한다.

   시간 : 1시 20분까지 -> 2시 까지


10/27
1. ItemRotator 완성하기
   시간 : 2시까지


10/28
1. 몬스터가 죽을 때 아이템이 생성되게 만들기
   1.1. TempItem 2~3종류 늘리기
   1.2. 몬스터가 죽을 때 TempItem 중 하나만 드랍하기
   1.3. 드랍 아이템이 선택되는 확률은 모두 다르게 만들기
   시간 : 10시 10분까지 -> 10시 25분까지

2. 플레이어가 아이템 주위에서 E키를 누르면 아이템이 사라진다.
   시간 : 12시까지

3. 코드 확인
   시간 : 1시 50분까지


주말과제
1. ItemFactory에 MakeItem 함수를 오버로딩하고 MakeItems 함수를 추가한다.
   1.1. MakeItem 함수 만들기
        1.1.1. 생성할 위치를 지정(파라메터 2개: ItemIDCode code, Vector3 position)
        1.1.2. 생성할 위치에 노이즈 추가 가능(파라메터 3개: ItemIDCode code, Vector3 position, bool randomNoise)
   1.2. MakeItems 함수 만들기
        1.2.1. 생성할 갯수를 지정(파라메터 2개: ItemIDCode code, int count)
        1.2.2. 생성할 위치와 갯수를 지정(파라메터 3개: ItemIDCode code, Vector3 position, int count)
        1.2.3. 생성할 위치에 노이즈 추가 가능(파라메터 4개: ItemIDCode code, Vector3 position, int count, bool randomNoise)

10/31
1. dropItems를 이용해 아이템을 드랍하게끔 MakeDropItem함수 수정
   시간 : 12시까지


11/2
1. PrintInventory() 함수 완성하기
   1.1. 출력 예시에 따라 인벤토리 내부의 아이템 상황을 디버그로 출력하기
   시간 : 12시까지 -> 12시 20분까지

2. FindSameItem 함수 완성하기
   시간 : 1시 50분까지


11/3
1. public bool AddItem(ItemData data, uint index); 함수 완성하기
   시간 : 10시 20분까지


2. public void MoveItem(uint from, uint to); 함수 수정하기
   2.1. from에 있는 아이템과 to에 있는 아이템이 같을 경우 to에 합쳐지도록 처리
   시간 : 12시 20분까지



11/7
1. Inventory의 크기가 기본값과 다를 때 ItemSlots UI안에 슬롯들이 모두 들어가게 하려면 어떻게 해야 하는가?(생각해보기)
   시간 : 12시 45분까지


11/8
1. ItemSlotUI의 Refresh 함수를 수정해서 아이템 갯수가 정확하게 보이도록 수정하기
   시간 : 10시 20분까지

2. TempItemSlotUI 클래스를 수정해서 드래그를 시작하면 TempItemSlotUI가 항상 마우스 위치를 따라다니게 수정하기
   시간 : 1시 10분까지


11/9
1. 상세 정보 창의 위치가 마우스 위치에 영향을 받도록 수정하기
   1.1. 기본적으로 마우스 위치와 상세정보창의 왼쪽 아래가 같아지도록 만들기
   1.2. 상세정보창이 화면 밖으로 나가는 경우에는 마우스 위치와 상세정보창의 오른쪽 아래가 같아지도록 만들기
   시간 : 12시까지 -> 12시 20분까지


11/10
1. ItemSpliter에 아이템 이미지 추가
   1.1. ItemSpliter에 ItemImage라는 이름으로 Image 추가
   1.2. ItemSpliter가 열릴 때 해당 아이템의 ItemIcon을 ItemImage에 표시하기

2. itemSplitCount 증감 시키기
   2.1. IncreaseButton과 DecreaseButton을 누를 때마다 itemSplitCount가 1씩 증감하기
   2.2. inputField의 값이 변경 될 때마다 itemSplitCount에 inputField가 가지고 있는 값으로 설정하기
   2.3. CountSlider의 최소값은 1이고 최대값은 ItemSpliter에 표시되는 (아이템 갯수 - 1)로 설정하기
   2.4. CountSlider가 변경되면 itemSplitCount에 CountSlider가 가지고 있는 값으로 설정하기
   시간 : 10시 50분까지 -> 12시까지


11/11
1. 아이템분리 창 외부를 클릭했을 때 아이템분리창이 닫히게 하기
   1.1. 마우스 클릭한 시점에서 마우스 위치를 읽는다.
   1.2. 마우스 클릭한 시점에서 마우스 위치가 아이템 분리창 안에 있는지 밖에 있는지 확인한다.(아이템 분리창의 위치와 크기를 이용한다.)
   1.3. 마우스 클릭한 시점에서 밖에 있으면 닫는다.
2. 마우스 휠을 이용해서 아이템 분리창의 분리할 아이템 갯수 증감 시키기
   2.1. 마우스 휠 입력정보를 받는다.(EventSystem이나 InputSystem 사용)
   2.2. 휠 입력에 따라 분리할 아이템 갯수 증감 시키기
3. 상세정보창이 나타나고 사라지는 것을 부드럽게 만들기
   3.1. DetailInfoUI의 canvasGroup.alpha를 보간이나 삼각함수를 사용해서 알파값 변화를 부드럽게 만들기
   시간 : 10시 30분까지 -> 10시 50분까지