8/23

1. WASD 입력에 따라 캡슐이 이동하는 방향이 변경되게 만들어라
  1.1. W를 누르면 위로 이동한다.
  1.2. A를 누르면 왼쪽으로 이동한다.
  1.3. S를 누르면 아래쪽로 이동한다.
  1.4. D를 누르면 오른쪽으로 이동한다.
  시간 : 2시 55분까지


8/24
1. Space키를 누르면 콘솔창에 "발사"라고 한번 출력된다.(액션 이름은 Fire로 한다.)
2. InputSystem을 이용해서 WASD로 이동한다.
  2.1. 키를 누르고 있는 동안만 해당 방향으로 계속 이동한다.
  시간 : 2시 20분까지

8/25
1. Player.cs를 수정해서 Space키를 누르면 콘솔창에 "발사"라고 한번 출력된다.
2. Player.cs를 수정해서 WASD로 이동한다.
  2.1. 키를 누르고 있는 동안만 해당 방향으로 계속 이동한다.
  시간 : 12시 15분까지

3. Shift키를 누르면 속도가 2배로 빨라진다.
  시간 : 3시 5분까지

8/26
1. 프로젝트 확인
   10시 40분까지

2. Bullet이 계속 자신의 오른쪽 방향으로 이동하도록 코드를 작성하라.
   12시까지

주말과제
1. 피하기 게임 만들기
  1.1. 플레이어는 좌우 움직일 수 있다.
  1.2. 하늘에서 무언가가 계속 떨어진다.(랜덤)
  1.3. 플레이어가 하늘에서 떨어진 것을 맞으면 콘솔창에 "Game Over"라고 출력한다.


8/29
1. EnemySpawner.cs를 수정하여 Enemy 프리팹을 지속적으로 실행하게 만들어보기.
  1.1. 반드시 코루틴으로 작성해야 한다.
  시간 : 12시 20분까지 -> 12시 50분까지

2. 운석이 화면 오른쪽 바깥의 랜덤한 지점에서 생성되서 화면 왼쪽 바깥의 랜덤한 지점으로 이동한다.
  2.1. AsteriodSpawner 클래스를 생성한다.
  2.2. AsteriodSpawner 클래스는 주기적으로 Asteroid 프리팹을 생성한다.
  2.3. AsteriodSpawner가 Asteroid를 생성하는 위치는 y만 랜덤.
  2.4. AsteriodSpawner는 Asteroid를 생성한 직후 Asteroid에게 화면 왼쪽의 랜덤한 지역을 목표로 지정한다.
  2.5. Asteroid는 지정된 지점을 향해 직선으로 움직인다.
  2.6. Asteroid는 자신의 진행방향을 기즈모(DrawLine)로 표시한다.


8/30
1. AsteroidSpawner 코드 확인하기
2. 쓸모 없어진 오브젝트(총알, 적, 운석)를 어떻게 제거할 것인지 방법 생각해보기
   시간 : 1시 20분까지

   1. 위치가 기준점 이하면 삭제 - 총알과 적/운석이 방향이 달라서 기준점을 따로 잡아야 한다. => 코드 관리가 어려워지기 때문에 패스
   2. 카메라 밖이면 삭제 - 2D용 카메라(orthographic)라 처리가 쉬운편. 다만 3D일 때는 계산량이 많아져서 패스
   3. 삭제용 오브젝트에 닿으면 삭제하라
   4. 일정 시간이 지나면 삭제하라
3. 총알은 FirePosition의 오른쪽 방향으로 날아가도록 수정하라
   시간 : 3시 20분까지


8/31
1. 총알이 다른 오브젝트와 부딪치면 총알과 부딪친 오브젝트를 사라지게 만들어보기
   시간 : 10시 18분까지
2. explosion1 ~ explosion5를 이용해서 ExplosionEffect라는 프리팹 만들어 보기
   시간 : 10시 50분까지
3. 운석이 터질때 ExplosionEffect가 재생되도록 만들어 보기
4. 운석은 3번 총알에 맞아야 터진다.
   시간 : 1시 20분까지

9/1
1. 운석을 다양하게 보여 주기
   1.1. SpriteRenderer의 flip을 이용하여 다양한 모습을 보여주자
        힌트1: SpriteRenderer를 가져오는 방법? -> GetComponent<SpriteRenderer>()
        힌트2: flip을 조절하는 방법 SpriteRenderer sprite;   sprite.filpX, sprite.filpY
   1.2. 이동속도를 랜덤으로 지정하기 2 ~ 4 사이로 설정
   1.3. 회전속도를 랜덤으로 지정하기 30 ~ 360 사이로 설정
   시간 : 9시 30분까지

2. 식 만들기
   2 ~ 4 사이의 값을 비율에 맞춰 30 ~ 360 사이의 값으로 변경하는 식 만들기
   힌트 : 2는 0%, 4는 100%로 생각해보기. (3은 50%)
   시간 : 11시 45분까지

3. 운석 쪼개기
   3.1. 작은 운석이 날아가는 첫 방향을 랜덤하게 변경하라.
        힌트 : 작은 운석이 날아가는 방향은 작은 운석이 생성될 때 결정. -> 큰운석이 파괴 될때의 코드를 수정하면 된다.
               작은 운석이 날아가는 방향은 설정을 했다. -> 설정된 결과를 변경하기만 하면 된다.
               Crush()함수만 수정하면 된다.
   3.2. 큰 운석은 생성되고 3~5초사이에 자동으로 터진다.(터지면서 작은 운석을 생성한다.)
        힌트 : Bullet의 lifeTime을 큰 운석에 이식한다.
               일정시간 후에 특정 기능을 수행하는 방법 -> 코루틴을 활용해 볼 것
   시간 : 1시 20분까지 -> 2시까지
   
   
   추가 문제 
    - 큰 운석이 터질때 나오는 작은 운석의 갯수를 랜덤으로 정하기
    - 적 비행기가 물결치듯이 움직이게 만들기 (Mathf.Sin 함수 활용해보기)

9/2
1. amplitude를 이용하여 적 비행기의 위아래 움직임 정도를 변경한다.
2. frequency을 이용하여 적 비행기가 위아래로 한번 움직이는데 걸리는 시간을 변경한다.
   시간 : 10시 30분까지

3. 1시 20분까지 코드 확인

4. PowerUp 아이템 기능 추가하기
   4.1. PowerUp 아이템은 1초에 한번씩 움직일 방향을 랜덤으로 결정한다.
   4.2. PowerUp 아이템 Border에 부딪치면 반사된다.
   4.3. PowerUp 아이템은 10초 후에 사라진다.
   시간 : 2시 20분

주말과제
1. 실습 4번 완료하기
2. PowerUp 아이템을 드랍하는 새로운 적 비행기 만들기
   2.1. 새로운 적 비행기는 EnemySpawner에서 10% 확률로 스폰


9/6
1. Background_Stars 완성하기
   1.1. bg-stars가 계속 스크롤링 되게 만든다.
   1.2. bg-stars는 오른쪽 끝으로 이동할 때 flipX와 flipY가 랜덤으로 변경된다.
   1.3. Background_Stars는 Background를 상속 받는다.
   시간 : 10시 30분까지 -> 10시 50분까지

2. 플레이어의 Life 추가하기. 라이프가 감소할 때 일정시간 무적 처리.
   2.1. 필요한 변수에는 어떤 것들이 있는가? -> life
   2.2. 필요한 기능에는 어떤 것들이 있는가? -> 캐릭터 깜박이기
   2.3. 필요한 기능을 위한 변수는 어떤 것들이 있는가?

9/7
1. 라이프가 감소할 때 일정시간 무적 만들기
   1.1. 라이프가 감소하면 InvincibleTime 만큼 무적 상태에 돌입한다.
   1.2. 무적 상태일 때는 플레이어 비행기가 깜박거린다.
   1.3. InvincibleTime이 지나면 원래 상태로 돌아온다.
   시간 : 9시 50분까지. -> 10시 30분까지

2. 코드 확인
   시간 : 1시까지

9/8
1. 나머지 적을 처치했을 때 점수가 올라가게 만들기
   시간 : 10시 15분까지
2. 점수를 즉시 올리는 것이 아니라 순차적으로 증가시키기
   시간 : 11시 50분까지
3. 코드 확인하고 점수가 올라가는 속도를 높이도록 변경해보기
   3.1. 점수가 올라가는 속도는 public 변수로 지정하기
   시간 : 12시 20분까지